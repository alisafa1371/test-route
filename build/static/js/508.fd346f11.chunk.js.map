{"version":3,"file":"static/js/508.fd346f11.chunk.js","mappings":"mLACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC8DnI,EAvDkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAqBrB,OACE,SAAC,EAAAE,SAAQ,WAEP,SAAC,EAAI,WACH,kBAEEN,UAAWC,EACXM,SAzBR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBP,EAAeQ,QAAQC,MACvCC,EAAcR,EAAaM,QAAQC,MAIzCb,EAAMe,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAgBoC,UAE3Bd,EAAMkB,YACL,gBAAKjB,UAAWC,EAAgB,UAC9B,SAACiB,EAAA,EAAc,OAInB,iBAAKlB,UAAWC,EAAgB,WAC9B,kBAAOkB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAKnB,QAEtC,iBAAKH,UAAWC,EAAgB,WAC9B,kBAAOkB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKjB,QAEpC,gBAAKL,UAAWC,EAAgB,UAC9B,mBAAQD,UAAU,MAAK,+BAMnC,E,kBCtCA,EAjBiB,WACf,OAAgCwB,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OACfC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACO,cAAXH,GACFC,EAAS,IAEb,GAAG,CAACD,EAAQC,IAKZ,OACE,SAAC,EAAS,CAACX,UAAsB,YAAXU,EAAsBb,WAJtB,SAACiB,GACvBL,EAAYK,EACd,GAIF,C","sources":["webpack://redux-basics/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://redux-basics/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/AddQuots.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__5sRmu\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__fZTGk\",\"loading\":\"QuoteForm_loading__GzjMX\",\"control\":\"QuoteForm_control__2pw27\",\"actions\":\"QuoteForm_actions__+CEP7\"};","import { Fragment } from \"react\";\nimport { useRef } from \"react\";\n// import { Prompt } from \"react-router-dom\"; // not suport in v6 for now\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  // const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  // not supported in v6\n  // const focusFormHandler = () => {\n  //   setIsEntering(true);\n  // };\n  // const finishedFormHandler = () => {\n  //   setIsEntering(false);\n  // };\n\n  return (\n    <Fragment>\n      {/* <Prompt when={isEntering} message={() => \"Are You sure\"} /> //not suport in v6 for now*/}\n      <Card>\n        <form\n          // onFocus={focusFormHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\">Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst AddQuots = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      navigate(\"/\");\r\n    }\r\n  }, [status, navigate]);\r\n\r\n  const addQuoteHandler = (data) => {\r\n    sendRequest(data);\r\n  };\r\n  return (\r\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\r\n  );\r\n};\r\nexport default AddQuots;\r\n"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","Fragment","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","useHttp","addQuote","sendRequest","status","navigate","useNavigate","useEffect","data"],"sourceRoot":""}